generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Item {
  id             Int        @id @default(autoincrement())
  parent_item    ParentItem @relation(fields: [parent_item_id], references: [id])
  parent_item_id Int
  name           String
  sku            String
  price          Decimal
  quantity       Int
  created_at     DateTime?
  updated_at     DateTime?
  stockSummaries  StockSummary[] 
  stock_movements Stock_Movement[] // Add this line

  @@map("items")
}

model ParentItem {
  id         Int       @id @default(autoincrement())
  name       String
  created_at DateTime?
  updated_at DateTime?

  items Item[]

  @@map("parent_items")
}

model PurchaseOrderLineItems {
  id                Int            @id @default(autoincrement())
  purchase_order    PurchaseOrders @relation(fields: [purchase_order_id], references: [id])
  purchase_order_id Int
  item_id           Int
  quantity          Int
  unit_cost         Decimal
  created_at        DateTime?
  updated_at        DateTime?

  @@map("purchase_order_line_items")
}

model PurchaseOrders {
  id                     Int       @id @default(autoincrement())
  vendor_name            String
  order_date             DateTime
  expected_delivery_date DateTime
  created_at             DateTime?
  updated_at             DateTime?

  purchase_order_line_items PurchaseOrderLineItems[]

  @@map("purchase_orders")
}
model StockSummary {
  id              Int    @id @default(autoincrement())
  itemId          Int
  SOH             Int
  stockAvailable  Int
  item            Item   @relation(fields: [itemId], references: [id])
  branch_id       Int

  @@unique([itemId, branch_id])
  @@map("stock_summary")
}
model Branch {
  id              Int    @id @default(autoincrement())
  name            String
  stock_movements Stock_Movement[] // Add this line
  @@map("Branches")
}
model AdjustmentLineItems {
  id              Int        @id @default(autoincrement())
  adjustment      Adjustment @relation(fields: [adjustment_id], references: [id])
  adjustment_id   Int
  item_id         Int
  quantity        Int
  cost            Decimal
  created_at      DateTime? @default(now())

  @@map("Adjustment_Lines")
}
model Adjustment {
  id              Int    @id @default(autoincrement())
  created_at      DateTime? @default(now())
  branch_id       Int
  adjustment_line_items AdjustmentLineItems[]
  stock_movements Stock_Movement[] 
  @@map("Adjustments")
}
model Stock_Movement {
  id                    Int       @id @default(autoincrement())
  Direction             Int       
  TransactionType       String    
  ItemID                Int       
  Quantity              Int      
  Branch_Id             Int      
  Applied_Transaction_Id Int      
  created_at            DateTime? @default(now())

  // Relations
  item                  Item      @relation(fields: [ItemID], references: [id])
  branch                Branch    @relation(fields: [Branch_Id], references: [id])
  adjustment            Adjustment @relation(fields: [Applied_Transaction_Id], references: [id])

  @@map("Stock_Movements")
}

